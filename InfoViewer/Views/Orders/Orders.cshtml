@model OrdersViewModel

@{
	string actionForForm =  Url.Action("Orders");
	string urlForReset = Url.Action("Orders", new { page = Model.PageInfo.PageNumber, sortOrder = Model.CurrentOrder });
	//Для сохранения страницы и сортировки
	Dictionary<string, string> pageParams = new Dictionary<string, string>();
	pageParams.Add("page", Model.PageInfo.PageNumber.ToString());
	if (Model.CurrentOrder != null)
		pageParams.Add("sortOrder", Model.CurrentOrder);
}
<div class="container">
	@Html.CreateFilter(urlForReset, actionForForm ,"Filter by id or name:", Model.CurrentFilter, pageParams)
</div>

<div class="container">
	<table class="table">
		<thead>
			<tr>
				<th scope="col">
					<a asp-action="@nameof(OrdersController.Orders)" asp-route-sortOrder="@Model.IdSortParam" asp-route-Page="@Model.PageInfo.PageNumber" 
					asp-route-filter="@Model.CurrentFilter">@Html.DisplayNameFor(o=>o.Orders.FirstOrDefault().Id)</a>
				</th>
				<th scope="col">
					<a asp-action="@nameof(OrdersController.Orders)" asp-route-sortOrder="@Model.NameSortParam" asp-route-Page="@Model.PageInfo.PageNumber" 
					asp-route-filter="@Model.CurrentFilter">@Html.DisplayNameFor(o=>o.Orders.FirstOrDefault().Customer.FullName)</a>
				</th>
				<th scope="col">
					<a asp-action="@nameof(OrdersController.Orders)" asp-route-sortOrder="@Model.DateSortParam" asp-route-Page="@Model.PageInfo.PageNumber" 
					asp-route-filter="@Model.CurrentFilter">@Html.DisplayNameFor(o=>o.Orders.FirstOrDefault().OrderDate)</a>
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Orders) {
			<tr>
				<th><a asp-action ="@nameof(OrdersController.Order)" asp-route-id=@item.Id>@item.Id</a> </th>
				<td><a asp-controller="Customers" asp-action="@nameof(CustomersController.Customer)" asp-route-id="@item.CustomerId">@item.Customer.FullName</a></td>
				<td>@item.OrderDate.ToLongDateString()</td>
			</tr>
			}
		</tbody>
	</table>
</div>

<div class="container">
	@(Html.CreatePagination(Model.PageInfo ,x=> Url.Action(nameof(OrdersController.Orders), new{page = x, sortOrder=Model.CurrentOrder, filter = Model.CurrentFilter}), options.Value))
</div>


